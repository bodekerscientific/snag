---
# YAML configuration file for use in SNAG.

# take care with scientific notation for numbers: 1.0e-4 will be interpreted as a number, but 1e-4 will incorrectly display as a string in the resulting namelist.
# This will break the build and show up as an "input conversion error" in the Rose error log
# list arrays [1.5, 1.3, 1.2]

meta:
  run_name: example_run_mcmurdo
  owner: Jono Conway <jono@bodekerscientific.com>

data:

  filename: Y:/DSC-SCM/SCM_INPUT/Blended_ARM_data_20160101_30min.nc # path to netCDF containing boundary condition data

  p:
    variable: pres # variable name in netCDF
  t:
    variable: temp # variable name in netCDF
  q:
    variable: sh # variable name in netCDF
  u:
    variable: u_wind # variable name in netCDF
  v:
    variable: v_wind # variable name in netCDF
  w:
    variable: v_wind # variable name in netCDF
  ozone:
    filename: P:/Projects/DSC-SCM/from Laura/Ozone_climatology_2000s_ARM.nc # path to netCDF containing ozone climatology
    variable: Ozone # variable name in netCDF
    vertical_variable: level_height # variable name in netCDF
    climatology: true  # is ozone file a climatology? if so then take the climatology from the month of the input data

forcing: # option to calculate input data for given forcing. Comment entries below for various options
  obs: # ObservationalForcing,
  # revealed: # RevealedForcing (not yet implemented in SNAG - set in INOBSFOR - l_vertadv)
  # relaxation: # RelaxationForcing (not yet implemented in SNAG - set in INOBSFOR)
  # stat: # StatisticalForcing (not yet implemented in SNAG)

CNTLSCM: # SCM top level control
 l_netcdf_obs:        false # unsupported feature (set to false)
 l_ts_log:            true # report model progress
 model_levels_nml:    85 # the number of levels in forcing grid - must match model_levels in UM namelist file SIZES (set in ROSES)
 land_points:         1 # land point(1) or sea(0). for 1, land_sea_mask must be set to true, and for 0 land_sea_mask=false
 nfor:                48 # number of observations in obs forcing. should be consistent with length of input data, ndayin + nminin + nsecin should equal  (nfor-1)*obs_pd. obs forcing includes initial timestep

INDATA: # time and spatial dimension control
  year_init:          2016 # OVERRIDDEN BY INPUT DATA but checked for consistency with forcing input data
  month_init:         1 # OVERRIDDEN BY INPUT DATA but checked for consistency with forcing input data
  day_init:           24 # OVERRIDDEN BY INPUT DATA but checked for consistency with forcing input data
  hour_init:          0 # OVERRIDDEN BY INPUT DATA but checked for consistency with forcing input data
  min_init:           0 # OVERRIDDEN BY INPUT DATA but checked for consistency with forcing input data
  sec_init:           30 # OVERRIDDEN BY INPUT DATA but checked for consistency with forcing input data
  salt_dim3:          85 # not sure why the third sea salt aerosol dimension is 85, but it is the same in TOGACOARE and GABLS3
  lat:                -77.85 # from ARM griddedsonde dataset
  long:               166.66 # from ARM griddedsonde dataset
  gridbox_area:       1.0e+6 # default value 1.0e+6
  soil_type:          3 # needed for land point. ice = 1 so match soil_mask and land_ice_mask??

RUNDATA: # various model options
  exname_in:          'ARM_MCMURDO' # it appears this is needed, though not sure for what
  exname_out:         'ARM_MCMURDO'
  ndayin:             0 # days requested in run. ndayin + nminin + nsecin should be consistent with (length of input data - 1) * obs_pd and (nfor -1)*obs_pd
  nminin:             1410 # hours requested in run. ndayin + nminin + nsecin should be consistent with (length of input data - 1) * obs_pd and (nfor -1)*obs_pd
  nsecin:             0 # seconds requested in run. ndayin + nminin + nsecin should be consistent with (length of input data - 1) * obs_pd and (nfor -1)*obs_pd
  timestep:           900 # needs to be a factor of obs_pd
  ntrad1:             1 # first timestep in which radiation called
  zh:                 500.0 # height (above surface) of the top of boundary layer
  ntml:               0 # model level of top of surface mixed layer (both GABLS and TOGACOARE use 0)
  min_trop_level:     0 # 0 = calculate min/max tropopause level from climatologies
  max_trop_level:     0 # 0 = calculate min/max tropopause level from climatologies
  co2start:           5.420e-4  # CO2 mixing ratio in kg/kg
  co2end:             5.420e-4
  dolr_rts:           0.0  # TOA - surface upward longwave radiation (not entirely sure what this is)
  orog:               0.0 # orography height in m
  albsoil:            0.23 # soil albedo
  sice_alb:           0.8 # sea ice albedo
#  land_alb:           = 0.5  # mean land albedo not needed if using tiles in JULES
  fland_ctile:        1.0  # fraction land # some logic, must = 0 for land_points=0, or between 0 and 1 for land_points=1 (fraction of land (either ice or soil) and sea)
  tstar_sea:          275.150 # can be set from tstari - mean surface temperature
  tstar_land:         265.150 # can be set from tstari
  tstar_sice:         275.150 # can be set from tstari
  albobs_sw:          0.125 # SW obs/clim albedo (SW)
  albobs_vis:         0.075 # SW obs/clim albedo (VIS)
  albobs_nir:         0.25 # SW obs/clim albedo (NIR)

LOGIC: # used for choosing various model options
  ancyc:              true # default = true. Not sure why
  altdat:             true # use specified initial profiles of theta,q,u and v from INPROF
  land_sea_mask:      true # land point(1) or sea point(0)  must match land_points
  land_ice_mask:      false # land ice point(1) or ice-free land point (0). mutually exclusive with soil_mask
  soil_mask:          true # land point with soil (1) or non-soil land_point. mutually exclusive with soil_mask
  obs:                true # use observational forcing for atmosphere
  obs_surf:           false # use observational forcing for surface (either fluxes or surface temperature)
# stats:              false
# noforce:            false
# geoforce:           false
# geoinit:            false
  l_qpos_for:         true  # check q input after large scale forcing
  l_spec_z0:          false # use prescribed roughness lengths (from INPROF for ocean and INJULES for land.
  test:               false # output deatiled sub-timestep diagnostics
  local_time:         false # use local, rather than GMT for diagnostics
#  prindump_step:      true # see dump_days in RUNDATA
#  prindump_day:       true
#  grafdump_step:      true

INJULES: # JULES land surface scheme options (only required for land points)
  # fraction of each surface type (9 tiles)
  #1) Trees (broadleaf) 2) Trees (needleleaf) 3) Grass (temperate) 4) Grass (tropical) 5) Shrubs 6) Urban 7) Inland water 8) Bare soil 9) Ice
  frac_typ:    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
  # soil moisture
  smi_opt:      0 # 0 use smcli, 1 use fsmc, 2 use sth
  smcli:      [0.0, 0.0, 0.0, 0.0] # initial soil moisture (kg/m3) on same layers as t_deep_soili. number of soil levels set by st_levels in UM namelist file SIZES (set in ROSES)
  # vegetation parameters for vegetation tiles (5)
  canht:       [0.0, 0.0, 0.0, 0.0,0.0]  # required. 1.5 gives us z0m = 0.15 for grass
  lai:         [2.0, 2.0, 2.0, 2.0, 2.0]
  gs:          1.0 # stomatal conductance (single value) (GABLS3 = 0.0161874815822)
  # other surface parameters for all tiles (9)
  z0_tile:     [0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.015, 0.15] # tile roughness length (m). this is ignored and overwritten by JULES for veg types
  tstar_tile:  [265.15, 265.15, 265.15, 265.15, 265.15, 265.15, 265.15, 265.15, 265.15] ## initial surface temperature of tiles initialised to tstari if not set
  catch:       [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # required for land case. surface/canopy water capacity (snow-free land tiles) (GABLS3 = 1.13)
  canopy:      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # surface/canopy water (snow-free land tiles)
  infil_tile:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.25e-3, 0.0] # maximum surface infiltration (GABLS3 = 8.25e-3)
  snow_tile:   [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # lying snow on tiles (kg/m^3)
  rgrain:      [50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0] # snow grain size (micro m) default 50

INGWD: # gravity wave drag options

INPROF: # initial profile options
# get profiles of theta, qi, p_in, ui, vi from files. wi and w_advi set to 0
  kill_interp:    true # input data is already on model levels
  z0mseai:        1.0e-4 # initial sea surface roughness length (required if LOGIC:l_spec_z0 = true)
  u_0:            0.0 # sea surface currents
  v_0:            0.0 # sea surface currents
  ice_fract:      0.0 # grid-box sea-ice fraction
  di:             0.0 # initial equivalent sea-ice thickness
  tstari:         265.15 # initial surface temperature (get from surface temperature forcing)
  i_snowdepth:    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]      # JULES lnd*tiles. if this specified, then need to add characteristic of each
  smci:           0.0 # initial soil moisture content
  canopy_gbi:     0.0 # initial canopy water content
  t_deep_soili:   [265.15, 265.15, 265.15, 265.15] # initial deep soil temperature (one for each soil layer) - corresponds to smcli and/or sth. number of soil levels set by st_levels in UM namelist file SIZES (set in ROSES)
  sil_orog_land:  0.0 # unresolved orography (land points only)
  ho2r2_orog:     0.0 # unresolved orography (land points only)

INGEOFOR: # geostrophic forcing options

PHYSWITCH: # physics switch options
 conv_mode:   0 # convection scheme mode (default 0)

RADCLOUD: # do not use as currently disabled in SCM

INOBSFOR: # observational forcing options
  obs_pd:    1800.0 # time period for observational forcing (s). should be consistent with input data, nfor and ndayin
  obs_bot:   0.0 # lower boundary to apply forcings (m) # should be consistent with
  obs_top:   85000.0 # upper boundary to apply forcings (m)

  old_nml:   false # set to false as SNAG automatically creates files with new format
  old_rlx:   false # pre-UM7.7 version of forcing relaxation (unsupported)
  l_vertadv: true # pre-UM7.7 version of horizontal-advective forcing (revealed forcing)(unsupported)

  rlx_t:     2      # default 0 = no relaxation
  rlx_q:     2      # default 0 = no relaxation
  rlx_u:     2      # default 2 = relax to observed large-scale profile over tau_u
  rlx_v:     2      # default 2 = relax to observed large-scale profile over tau_u
  rlx_w:     0      # default 4 = relax to observed large-scale profile over timestep

  tau_t:     3600.0 # timescale for relaxation (s; default 3600.0)
  tau_q:     3600.0 # timescale for relaxation (s; default 3600.0)
  tau_u:     3600.0 # timescale for relaxation (s; default 3600.0)
  tau_v:     3600.0 # timescale for relaxation (s; default 3600.0)
  tau_w:     3600.0 # timescale for relaxation (s; default 3600.0)

  plev_t:    1.0e+10 # apply relaxation on all levels with pressure less than (default = 1.51e+5)
  plev_q:    1.0e+10
  plev_u:    1.0e+10
  plev_v:    1.0e+10
  plev_w:    1.0e+10


DIAGS:   # diagnositc output options
 strm_format(1):      4 # 4 = netCDF, 3 = text
 strm_unit(1):        -1 # -1 for netCDF, 37 for text
 strm_dumpstep:       +1 # +ve = dumping period of x timesteps, -ve = dumping period around x seconds, 0 = dumping period whole run.
 strm_rejectlist(1):  '' # variables to exclude from a given stream
 l_SCMDiag_gen:    true
 l_SCMDiag_conv:   true
 l_SCMDiag_rad:    true
 l_SCMDiag_bl:     true
 l_SCMDiag_lsp:    true
 l_SCMDiag_lscld:  true
 l_SCMDiag_forc:   true
 l_SCMDiag_incs:   true
 l_SCMDiag_pc2:    true
 l_SCMDiag_surf:   true
 l_SCMDiag_sea:    false # should be set by land_point
 l_SCMDiag_land:   true # should be set by land_point


